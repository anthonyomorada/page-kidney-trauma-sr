)
onset_summary_table %>%
kbl(caption = "Time from Injury to Page Kidney Diagnosis",
align = "lcc") %>%
kable_styling(bootstrap_options = c("striped", "hover"),
full_width = FALSE)
# mechanism analysis
total_patients <- nrow(df)
mechanism_summary <- as.data.frame(table(df$mechanism))
colnames(mechanism_summary) <- c("Mechanism", "Count")
mechanism_summary <- mechanism_summary %>%
mutate(`Percentage (%)` = round(100 * Count / total_patients, 1))
mechanism_summary %>%
kbl(caption = "Mechanism of Injury Leading to Page Kidney",
align = "lcc") %>%
kable_styling(bootstrap_options = c("striped", "hover"),
full_width = FALSE)
# Professional bar plot
ggplot(mechanism_summary, aes(x = reorder(Mechanism, -Count), y = Count)) +
geom_col(fill = "#4C72B0") +
labs(
title = "Mechanism of Injury Leading to Page Kidney",
x = "Mechanism of Injury",
y = "Number of Cases"
) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# symptom processing
df <- df %>%
mutate(
ss_combined = ifelse(hypertension,
ifelse(ss == "" | is.na(ss), "hypertension", paste(ss, "hypertension", sep = "; ")),
ss)
)
df <- df %>%
mutate(
ua_clean = str_to_lower(ua),
ss_combined = ifelse(
ua_clean == "hematuria" & !str_detect(str_to_lower(ss_combined), "hematuria"),
ifelse(is.na(ss_combined) | ss_combined == "", "hematuria", paste(ss_combined, "hematuria", sep = "; ")),
ss_combined
)
)
# Create ID and clean the combined symptom column
ss_clean <- data.frame(id = seq_along(df$ss_combined), ss = df$ss_combined) %>%
mutate(ss = str_to_lower(ss)) %>%
mutate(ss = str_replace_all(ss, ",", ";")) %>%
separate_rows(ss, sep = ";\\s*") %>%
mutate(ss = str_trim(ss)) %>%
filter(ss != "") %>%
distinct(id, ss)
# symptom categorization
ss_clean <- ss_clean %>%
mutate(symptom = case_when(
str_detect(ss, "flank pain") ~ "Flank pain",
str_detect(ss, "abdominal pain") ~ "Abdominal pain",
str_detect(ss, "back pain") ~ "Back pain",
str_detect(ss, "chest pain") ~ "Chest Pain",
str_detect(ss, "nausea") ~ "Nausea",
str_detect(ss, "vomiting") ~ "Vomiting",
str_detect(ss, "hematemesis") ~ "Hematemesis",
str_detect(ss, "headache") ~ "Headache",
str_detect(ss, "syncope") ~ "Syncope",
str_detect(ss, "hematuria") ~ "Hematuria",
str_detect(ss, "palpitations|palpations") ~ "Palpitations",
str_detect(ss, "oligou?ria") ~ "Oliguria",
str_detect(ss, "anuria") ~ "Anuria",
str_detect(ss, "fatigue") ~ "Fatigue",
str_detect(ss, "distension") ~ "Abdominal distension",
str_detect(ss, "ecchymosis") ~ "Ecchymosis",
str_detect(ss, "hypertension") ~ "Hypertension",
str_detect(ss, "aki") ~ "Acute kidney injury",
str_detect(ss, "asymptomatic") ~ "Asymptomatic",
TRUE ~ str_to_title(ss)
))
symptom_summary <- ss_clean %>%
count(symptom, sort = TRUE) %>%
mutate(Percentage = round(100 * n / n_distinct(ss_clean$id), 1))
symptom_summary %>%
kbl(caption = "Presenting Symptoms and Signs",
col.names = c("Symptom", "Count", "Percentage (%)"),
align = "lcc") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"),
full_width = FALSE)
# Professional symptom plot
ggplot(symptom_summary, aes(x = reorder(symptom, n), y = n)) +
geom_col(fill = "#D55E00") +
geom_text(aes(label = paste0(Percentage, "%")), hjust = -0.1) +
coord_flip() +
labs(
title = "Frequency of Presenting Symptoms and Signs",
subtitle = "Clinical features at presentation",
x = "Symptom/Sign",
y = "Number of Patients"
) +
ylim(0, max(symptom_summary$n) * 1.15)
ua_summary <- df %>%
mutate(ua_result = case_when(
is.na(ua) ~ "Missing",
str_to_lower(ua) %in% c("hematuria") ~ "Positive",
str_to_lower(ua) %in% c("negative") ~ "Negative",
str_detect(str_to_lower(ua), "trace") ~ "Positive",
TRUE ~ "Other"
)) %>%
count(ua_result, name = "n") %>%
mutate(percent = round(100 * n / sum(n), 1))
ua_summary %>%
kbl(caption = "Urinalysis Results Distribution",
col.names = c("Urinalysis Result", "n", "Percentage (%)"),
align = "lcc") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"),
full_width = FALSE)
grade_summary <- df %>%
count(grade, name = "n", drop = FALSE) %>%
mutate(
Grade = ifelse(is.na(grade), "Missing", as.character(grade)),
Percentage = round(100 * n / nrow(df), 1)
) %>%
select(Grade, n, Percentage)
grade_summary %>%
kbl(caption = "Distribution of AAST Kidney Injury Grades",
align = "lcc") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"),
full_width = FALSE)
# Professional grade visualization
ggplot(grade_summary, aes(x = reorder(Grade, -n), y = n, fill = Grade)) +
geom_col(width = 0.6, color = "black") +
geom_text(aes(label = paste0(n, " (", Percentage, "%)")),
vjust = -0.5, size = 4) +
labs(
title = "AAST Kidney Injury Grade Distribution",
subtitle = "Injury severity classification",
x = "AAST Grade",
y = "Number of Patients"
) +
theme(legend.position = "none")
size_summary <- df %>%
summarise(
median = median(size.cm, na.rm = TRUE),
iqr_low = quantile(size.cm, 0.25, na.rm = TRUE),
iqr_high = quantile(size.cm, 0.75, na.rm = TRUE),
min = min(size.cm, na.rm = TRUE),
max = max(size.cm, na.rm = TRUE),
mean = mean(size.cm, na.rm = TRUE),
sd = sd(size.cm, na.rm = TRUE),
missing = sum(is.na(size.cm)),
total = n()
)
# Size distribution histogram
ggplot(df %>% filter(!is.na(size.cm)), aes(x = size.cm)) +
geom_histogram(bins = 12, fill = "#20B2AA", alpha = 0.8, color = "white") +
geom_vline(aes(xintercept = median(size.cm, na.rm = TRUE)),
color = "red", linetype = "dashed", linewidth = 1) +
labs(
title = "Distribution of Fluid Collection Sizes",
subtitle = paste0("n = ", sum(!is.na(df$size.cm)), " patients with reported measurements"),
x = "Collection Size (cm)",
y = "Number of Patients"
)
# Size summary table
size_stats_table <- data.frame(
Statistic = c("n", "Median (IQR)", "Mean ± SD", "Range", "Missing"),
Value = c(
sum(!is.na(df$size.cm)),
paste0(size_summary$median, " (", size_summary$iqr_low, "–", size_summary$iqr_high, ")"),
paste0(round(size_summary$mean, 1), " ± ", round(size_summary$sd, 1)),
paste0(size_summary$min, "–", size_summary$max),
paste0(size_summary$missing, " (", round(100 * size_summary$missing / size_summary$total, 1), "%)")
)
)
size_stats_table %>%
kbl(caption = "Perinephric Fluid Collection Size Statistics",
align = "lc") %>%
kable_styling(bootstrap_options = c("striped", "hover"),
full_width = FALSE)
page_type_summary <- df %>%
mutate(page_type_clean = ifelse(is.na(page.type), "Missing", as.character(page.type))) %>%
count(page_type_clean, name = "n") %>%
mutate(Percentage = round(100 * n / sum(n), 1))
page_type_summary %>%
kbl(caption = "Type of Perinephric Fluid Collection",
col.names = c("Collection Type", "n", "Percentage (%)"),
align = "lcc") %>%
kable_styling(bootstrap_options = c("striped", "hover"),
full_width = FALSE)
# Visualization
ggplot(page_type_summary, aes(x = reorder(page_type_clean, n), y = n)) +
geom_col(fill = "#800000", alpha = 0.8) +
geom_text(aes(label = paste0(n, " (", Percentage, "%)")),
hjust = -0.1, size = 4) +
coord_flip() +
labs(
title = "Distribution of Fluid Collection Types",
x = "Collection Type",
y = "Number of Cases"
) +
scale_y_continuous(expand = expansion(mult = c(0, 0.15)))
laterality_table <- df %>%
count(laterality) %>%
mutate(Percentage = round(100 * n / sum(n), 1))
laterality_table %>%
kbl(caption = "Distribution of Laterality in Page Kidney Cases",
align = "lcc") %>%
kable_styling(bootstrap_options = c("striped", "hover"),
full_width = FALSE)
# Laterality visualization
ggplot(laterality_table, aes(x = reorder(laterality, n), y = n)) +
geom_col(fill = "#2F4F4F", alpha = 0.8) +
geom_text(aes(label = paste0(n, " (", Percentage, "%)")),
hjust = -0.1, size = 4) +
coord_flip() +
labs(
title = "Laterality Distribution of Page Kidney",
x = "Kidney Location",
y = "Number of Cases"
) +
scale_y_continuous(expand = expansion(mult = c(0, 0.15)))
treatment_categories <- data.frame(
Category = c("Conservative Management", "Percutaneous/IR Drainage", "Urologic Interventions",
"Surgical Decompression", "Nephrectomy", "Embolization/Vascular"),
Definition = c("Medical management only, no procedural interventions",
"US- or CT-guided drainage, non-surgical",
"Involving stents or urinary diversion",
"Operative evacuation of hematoma without nephrectomy",
"Total or partial nephrectomy (open/lap)",
"IR embolization or stenting of vessels"),
Examples = c("conservative, lisinopril, clonidine, captopril, propranolol",
"US drainage, CT perc drain, IR drainage, tPA, fibrinolysis",
"ureteral stent, ureteral stet, labetalol + stent",
"surgical evacuation, laparoscopic fenestration, decortication, renorrhaphy",
"lap nephrectomy, total nephrectomy, surgical evacuation + nephrectomy",
"IR coil embolization, splenic vein stent")
)
treatment_categories %>%
kbl(caption = "Treatment Category Definitions and Examples") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"),
full_width = TRUE) %>%
column_spec(2, width = "35%") %>%
column_spec(3, width = "35%")
df <- df %>%
mutate(treatment_lower = tolower(treatment))
df_flags <- df %>%
mutate(
Conservative = str_detect(treatment_lower, "conservative|lisinopril|clonidine|captopril|amlodipine|propran|methyldopa|hctz|hydralazine|felodipine|labetolol|nitroprusside") &
!str_detect(treatment_lower, "drain|nephrectomy|evacuation|decortication|fenestration|stent|embol|coil|surgery|lap|ureter"),
Perc_IR = str_detect(treatment_lower, "drain|fibrinolysis|fine needle|tp[a]?") &
!str_detect(treatment_lower, "surgery|nephrectomy"),
Urologic = str_detect(treatment_lower, "ureteral stent|stet"),
Surgical_Decompression = str_detect(treatment_lower, "surgical evacuation|decortication|renorrhaphy|laparotomy|debridement|fenestration") &
!str_detect(treatment_lower, "nephrectomy"),
Nephrectomy = str_detect(treatment_lower, "nephrectomy"),
Vascular = str_detect(treatment_lower,
"embolization|coil|splenic vein stent")
)
# Pivot longer to get counts
treatment_summary <- df_flags %>%
select(reference, starts_with(c("Conservative", "Perc_IR", "Urologic",
"Surgical_Decompression", "Nephrectomy",
"Vascular"))) %>%
pivot_longer(cols = -reference, names_to = "Category",
values_to = "Present") %>%
filter(Present) %>%
count(Category, name = "n") %>%
mutate(Percentage = round(100 * n / nrow(df), 1))
treatment_summary %>%
kbl(caption = "Distribution of Treatment Modalities",
col.names = c("Treatment Category", "n", "Percentage (%)"),
align = "lcc") %>%
kable_styling(bootstrap_options = c("striped", "hover"),
full_width = FALSE)
# Treatment distribution plot
ggplot(treatment_summary, aes(x = reorder(Category, -n), y = n)) +
geom_bar(stat = "identity", fill = "#DAA520") +
geom_text(aes(label = paste0(n, " (", Percentage, "%)")),
vjust = -0.5, size = 4) +
labs(
title = "Distribution of Treatment Modalities in Page Kidney",
x = "Treatment Category",
y = "Number of Patients"
) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_y_continuous(expand = expansion(mult = c(0, 0.15)))
df$fu.y <- as.numeric(df$fu.y)
# Summary stats
followup_summary <- df %>%
summarize(
`Number with Reported Follow-Up` = sum(!is.na(fu.y)),
`Mean (years)` = round(mean(fu.y, na.rm = TRUE), 2),
`Median (years)` = round(median(fu.y, na.rm = TRUE), 2),
`Min (years)` = round(min(fu.y, na.rm = TRUE), 2),
`Max (years)` = round(max(fu.y, na.rm = TRUE), 2)
)
followup_summary %>%
kbl(caption = "Follow-up Duration Summary",
align = "lc") %>%
kable_styling(bootstrap_options = c("striped", "hover"),
full_width = FALSE)
ggplot(df %>% filter(!is.na(fu.y)), aes(x = fu.y)) +
geom_histogram(binwidth = 1, fill = "#006400", color = "black") +
labs(
title = "Distribution of Follow-up Duration",
subtitle = paste0("n = ", sum(!is.na(df$fu.y)), " patients with reported follow-up"),
x = "Years of Follow-Up",
y = "Number of Patients"
)
# Survival/outcome summary
survival_summary <- data.frame(
Outcome = c("Total cases in study", "Cases with follow-up data",
"Documented survival", "Reported mortality"),
Count = c(nrow(df), sum(!is.na(df$fu.y)),
sum(df$fu.status == TRUE, na.rm = TRUE),
sum(df$fu.status == FALSE, na.rm = TRUE)),
Percentage = c(100, round(100 * sum(!is.na(df$fu.y)) / nrow(df), 1),
round(100 * sum(df$fu.status == TRUE,
na.rm = TRUE) / sum(!is.na(df$fu.y)), 1),
0)
)
survival_summary %>%
kbl(caption = "Clinical Outcomes Summary",
align = "lcc") %>%
kable_styling(bootstrap_options = c("striped", "hover"),
full_width = FALSE)
pmh_cleaned <- pmh_all %>%
group_by(id) %>%
summarise(
pmh = paste(unique(category), collapse = "; "),
.groups = "drop"
)
ss_cleaned <- ss_clean %>%
group_by(id) %>%
summarise(
ss = paste(unique(symptom), collapse = "; "),
.groups = "drop"
)
# Select only the treatment flag columns
treatment_cols <- c("Conservative", "Perc_IR", "Urologic",
"Surgical_Decompression", "Nephrectomy", "Vascular")
# Create a treatment summary
treatment_cleaned <- df_flags %>%
mutate(id = row_number()) %>%
pivot_longer(
cols = all_of(treatment_cols),
names_to = "category",
values_to = "present"
) %>%
filter(present) %>%
group_by(id) %>%
summarise(
treatment_summary = paste(category, collapse = "; "),
.groups = "drop"
)
df <- df %>%
mutate(id = row_number()) %>%
left_join(pmh_cleaned, by = "id") %>%
left_join(ss_cleaned, by = "id") %>%
left_join(treatment_cleaned, by = "id")
# Making final table
df <- df %>%
select(
reference, year, age, gender,
pmh = pmh.y,
onset.y, mechanism,
ss = ss.y,
hypertension,
ua = ua_result,
grade, size.cm, page.type, laterality,
treatment = treatment_summary,
fu.status, fu.y
)
# Export cleaned data
write.csv(df, "data/tpk-table.csv", row.names = FALSE)
# Cleaning workspace
rm(list = setdiff(ls(), "df"))
# Clean and format the data for Table 1, using "NR" for missing data
table1 <- df %>%
mutate(
# Clean reference formatting
Reference = gsub("_", " et al., ", reference),
# Format year
Year = year,
# Format age
Age = ifelse(is.na(age) | age == "NA" | age == "Not reported", "NR", age),
# Clean gender
Gender = case_when(
gender == "m" ~ "Male",
gender == "f" ~ "Female",
is.na(gender) | gender == "NA" | gender == "Not reported" ~ "NR",
TRUE ~ gender
),
# Clean past medical history
`Past Medical History` = ifelse(is.na(pmh) | pmh == "NA" | pmh == "Not reported", "NR", pmh),
# Format onset time with day-level resolution for very short intervals
`Time to Onset` = case_when(
is.na(onset.y) | onset.y == "NA" | onset.y == "Not reported" ~ "NR",
onset.y < (1/12) ~ paste0(round(onset.y * 365), " days"),
onset.y < 1 ~ paste0(round(onset.y * 12, 1), " months"),
onset.y == 1 ~ "1 year",
onset.y > 1 ~ paste0(round(onset.y, 1), " years"),
TRUE ~ "NR"
),
# Clean mechanism
`Injury Mechanism` = case_when(
is.na(mechanism) | mechanism == "NA" | mechanism == "Not reported" ~ "NR",
mechanism == "mvc" ~ "Motor vehicle collision",
mechanism == "fall" ~ "Fall",
mechanism == "blunt" ~ "Blunt trauma",
TRUE ~ mechanism
),
# Clean signs and symptoms
`Signs & Symptoms` = ifelse(is.na(ss) | ss == "NA" | ss == "Not reported", "NR", ss),
# Format hypertension
Hypertension = case_when(
hypertension == TRUE ~ "Yes",
hypertension == FALSE ~ "No",
is.na(hypertension) | hypertension == "NA" | hypertension == "Not reported" ~ "NR",
TRUE ~ as.character(hypertension)
),
# Clean urinalysis
Urinalysis = case_when(
is.na(ua) | ua == "NA" | ua == "Not reported" ~ "NR",
ua == "Positive" ~ "Abnormal",
ua == "Negative" ~ "Normal",
TRUE ~ ua
),
# Clean injury grade
`Injury Grade` = ifelse(is.na(grade) | grade == "NA" | grade == "Not reported", "NR", grade),
# Format size
`Size (cm)` = case_when(
is.na(size.cm) | size.cm == "NA" | size.cm == "Not reported" ~ "NR",
TRUE ~ paste0(size.cm, " cm")
),
# Clean page kidney type
`Page Kidney Type` = case_when(
is.na(page.type) | page.type == "NA" | page.type == "Not reported" ~ "NR",
page.type == "hematoma" ~ "Hematoma",
page.type == "urinoma" ~ "Urinoma",
page.type == "lymphocele" ~ "Lymphocele",
TRUE ~ page.type
),
# Clean laterality
Laterality = case_when(
is.na(laterality) | laterality == "NA" | laterality == "Not reported" ~ "NR",
laterality == "left" ~ "Left",
laterality == "right" ~ "Right",
laterality == "bilateral" ~ "Bilateral",
laterality == "allograft right" ~ "Allograft (Right)",
laterality == "allograft left" ~ "Allograft (Left)",
TRUE ~ laterality
),
# Clean treatment
Treatment = case_when(
is.na(treatment) | treatment == "NA" | treatment == "Not reported" ~ "NR",
treatment == "Conservative" ~ "Medical management",
treatment == "Surgical_Decompression" ~ "Surgical decompression",
treatment == "Perc_IR" ~ "Percutaneous intervention",
treatment == "Perc_IR; Surgical_Decompression" ~ "Percutaneous intervention + Surgical decompression",
treatment == "Perc_IR; Vascular" ~ "Percutaneous intervention + Vascular intervention",
treatment == "Urologic" ~ "Urological intervention",
treatment == "Nephrectomy" ~ "Nephrectomy",
treatment == "Vascular" ~ "Vascular intervention",
TRUE ~ treatment
),
# Clean follow-up status
`Follow-up Status` = case_when(
fu.status == TRUE ~ "Alive",
fu.status == FALSE ~ "NR",
is.na(fu.status) | fu.status == "NA" | fu.status == "Not reported" ~ "NR",
TRUE ~ "NR"
),
# Format follow-up duration
`Follow-up Duration` = case_when(
is.na(fu.y) | fu.y == "NA" | fu.y == "Not reported" ~ "NR",
fu.y < 1 ~ paste0(round(fu.y * 12, 1), " months"),
fu.y == 1 ~ "1 year",
fu.y > 1 ~ paste0(round(fu.y, 1), " years"),
TRUE ~ "NR"
)
) %>%
# Select and reorder columns for final table
select(
Reference,
Year,
Age,
Gender,
`Past Medical History`,
`Time to Onset`,
`Injury Mechanism`,
`Signs & Symptoms`,
Hypertension,
Urinalysis,
`Injury Grade`,
`Size (cm)`,
`Page Kidney Type`,
Laterality,
Treatment,
`Follow-up Status`,
`Follow-up Duration`
)
# Display the cleaned table
kable(table1,
caption = "Table 1. Characteristics of Page Kidney Cases in Systematic Review. Data presented as reported in original publications. 'NR' indicates data not reported in the original study. Time to onset refers to time from initial trauma to Page kidney diagnosis. Injury grade refers to renal trauma grading when available. Treatment categories: Medical management includes antihypertensive therapy and monitoring; Percutaneous intervention includes drainage, embolization, or stenting; Surgical decompression includes open or laparoscopic capsulotomy; Urological intervention includes ureteral stenting or nephrostomy; Vascular intervention includes angioplasty or bypass procedures.",
format = "html",
na = "NR",
table.attr = "style='font-size:12.5px'") %>%
kable_styling(
bootstrap_options = c("striped", "hover", "condensed", "responsive"),
full_width = FALSE,
position = "left"
) %>%
column_spec(1, bold = TRUE, width = "12em") %>%  # Reference column
column_spec(5, width = "15em") %>%  # Past Medical History
column_spec(8, width = "15em") %>%  # Signs & Symptoms
column_spec(15, width = "12em")     # Treatment
