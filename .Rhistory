subtitle = paste0("n = ", sum(!is.na(df$age)), " patients"),
x = "Age (years)",
y = "Density"
)
# Summary statistics table
age_stats <- data.frame(
Statistic = c("n", "Median (IQR)", "Mean ± SD", "Range"),
Value = c(
sum(!is.na(df$age)),
paste0(median(df$age, na.rm = TRUE), " (",
quantile(df$age, 0.25, na.rm = TRUE), "–",
quantile(df$age, 0.75, na.rm = TRUE), ")"),
paste0(round(mean(df$age, na.rm = TRUE), 1), " ± ",
round(sd(df$age, na.rm = TRUE), 1)),
paste0(min(df$age, na.rm = TRUE), "–", max(df$age, na.rm = TRUE))
)
)
age_stats %>%
kbl(caption = "Age Distribution Summary",
align = "lc") %>%
kable_styling(bootstrap_options = c("striped", "hover"),
full_width = FALSE)
# Gender analysis maintaining your original approach
gender_counts <- table(df$gender)
total_patients <- nrow(df)
# Your original PMH processing approach with enhanced formatting
pmh_vec <- df$pmh
pmh_clean <- data.frame(id = seq_along(pmh_vec), pmh = pmh_vec) %>%
mutate(pmh = str_to_lower(pmh)) %>%
separate_rows(pmh, sep = ";\\s*") %>%
mutate(pmh = str_trim(pmh)) %>%
filter(pmh != "none" & pmh != "")
# Handle compound phrases that should yield 2+ categories
manual_split <- pmh_clean %>%
filter(
str_detect(pmh, "dm, polyneuropathy") |
str_detect(pmh, "renal/pancreas") |
str_detect(pmh, "sleep apnea.*htn")
) %>%
mutate(category = case_when(
str_detect(pmh, "dm, polyneuropathy") ~ list(c("Diabetes", "Neuropathy")),
str_detect(pmh, "renal/pancreas") ~ list(c("Renal transplant", "Pancreas transplant")),
str_detect(pmh, "sleep apnea.*htn") ~ list(c("Sleep apnea", "Hypertension"))
)) %>%
unnest_longer(category)
pmh_main <- pmh_clean %>%
filter(!pmh %in% manual_split$pmh)
# categorization logic
pmh_main <- pmh_main %>%
mutate(category = case_when(
str_detect(pmh, "pancreas transplant|renal/pancreas|pancreas") ~ "Pancreas transplant",
str_detect(pmh, "renal txp|renal transplant") ~ "Renal transplant",
str_detect(pmh, "htn|hypertension|hctz|losartan|amlodipine") ~ "Hypertension",
str_detect(pmh, "dm|diabetes") ~ "Diabetes",
str_detect(pmh, "cad") ~ "Coronary artery disease",
str_detect(pmh, "chronic renal|renal insufficiency|crf") ~ "Chronic renal insufficiency",
str_detect(pmh, "glomerulonephritis") ~ "Glomerulonephritis",
str_detect(pmh, "absent|congenital|atrophic") ~ "Congenital kidney anomaly",
str_detect(pmh, "seizure") ~ "Seizure disorder",
str_detect(pmh, "asthma") ~ "Asthma",
str_detect(pmh, "sleep apnea|cpap") ~ "Sleep apnea",
str_detect(pmh, "polyneuropathy|neuropathy") ~ "Neuropathy",
str_detect(pmh, "fracture") ~ "Fracture",
str_detect(pmh, "marijuana") ~ "Substance use",
TRUE ~ "Other"
))
pmh_all <- bind_rows(pmh_main, manual_split)
# Get total number of patients
total_patients <- n_distinct(df$pmh)
# Create PMH summary table
pmh_summary <- pmh_all %>%
count(category, name = "n") %>%
arrange(desc(n)) %>%
mutate(Percentage = round(100 * n / total_patients, 1))
# Professional visualization
ggplot(pmh_summary, aes(x = reorder(category, n), y = n)) +
geom_col(fill = "#4C72B0") +
coord_flip() +
labs(
title = "Distribution of Past Medical History",
subtitle = paste0("Based on ", total_patients, " total patients"),
x = "Medical Condition",
y = "Number of Patients"
)
# Summary table
pmh_summary %>%
select(`Medical Condition` = category, n, `Percentage (%)` = Percentage) %>%
kbl(caption = "Past Medical History Distribution",
align = "lcc") %>%
kable_styling(bootstrap_options = c("striped", "condensed"),
full_width = FALSE)
# onset analysis
onset_stats <- list(
summary = summary(df$onset.y),
mean = mean(df$onset.y, na.rm = TRUE),
sd = sd(df$onset.y, na.rm = TRUE),
quantiles = quantile(df$onset.y, probs = c(0.25, 0.5, 0.75), na.rm = TRUE)
)
# histogram
ggplot(df, aes(x = onset.y)) +
geom_histogram(binwidth = 0.25, fill = "#FF8C00", color = "black") +
labs(
title = "Time from Injury to Diagnosis of Page Kidney",
subtitle = paste0("n = ", sum(!is.na(df$onset.y)), " patients with reported onset time"),
x = "Time to Diagnosis (years)",
y = "Number of Patients"
)
# log-scaled plot
ggplot(df, aes(x = onset.y)) +
geom_histogram(binwidth = 0.25, fill = "steelblue", color = "black") +
scale_x_log10() +
labs(
title = "Log-Scaled Time to Diagnosis of Page Kidney",
subtitle = "Better visualization of the distribution spread",
x = "Time to Diagnosis (log years)",
y = "Number of Patients"
)
# Summary statistics table
onset_summary_table <- data.frame(
Statistic = c("n", "Median", "IQR", "Mean ± SD", "Range"),
`Time (years)` = c(
sum(!is.na(df$onset.y)),
round(median(df$onset.y, na.rm = TRUE), 2),
paste0(round(quantile(df$onset.y, 0.25, na.rm = TRUE), 2), "–",
round(quantile(df$onset.y, 0.75, na.rm = TRUE), 2)),
paste0(round(mean(df$onset.y, na.rm = TRUE), 2), " ± ",
round(sd(df$onset.y, na.rm = TRUE), 2)),
paste0(round(min(df$onset.y, na.rm = TRUE), 3), "–",
round(max(df$onset.y, na.rm = TRUE), 1))
),
`Time (days)` = c(
"",
round(median(df$onset.y, na.rm = TRUE) * 365),
paste0(round(quantile(df$onset.y, 0.25, na.rm = TRUE) * 365), "–",
round(quantile(df$onset.y, 0.75, na.rm = TRUE) * 365)),
paste0(round(mean(df$onset.y, na.rm = TRUE) * 365), " ± ",
round(sd(df$onset.y, na.rm = TRUE) * 365)),
paste0(round(min(df$onset.y, na.rm = TRUE) * 365), "–",
round(max(df$onset.y, na.rm = TRUE) * 365))
)
)
onset_summary_table %>%
kbl(caption = "Time from Injury to Page Kidney Diagnosis",
align = "lcc") %>%
kable_styling(bootstrap_options = c("striped", "hover"),
full_width = FALSE)
# mechanism analysis
total_patients <- nrow(df)
mechanism_summary <- as.data.frame(table(df$mechanism))
colnames(mechanism_summary) <- c("Mechanism", "Count")
mechanism_summary <- mechanism_summary %>%
mutate(`Percentage (%)` = round(100 * Count / total_patients, 1))
mechanism_summary %>%
kbl(caption = "Mechanism of Injury Leading to Page Kidney",
align = "lcc") %>%
kable_styling(bootstrap_options = c("striped", "hover"),
full_width = FALSE)
# Professional bar plot
ggplot(mechanism_summary, aes(x = reorder(Mechanism, -Count), y = Count)) +
geom_col(fill = "#4C72B0") +
labs(
title = "Mechanism of Injury Leading to Page Kidney",
x = "Mechanism of Injury",
y = "Number of Cases"
) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# symptom processing
df <- df %>%
mutate(
ss_combined = ifelse(hypertension,
ifelse(ss == "" | is.na(ss), "hypertension", paste(ss, "hypertension", sep = "; ")),
ss)
)
df <- df %>%
mutate(
ua_clean = str_to_lower(ua),
ss_combined = ifelse(
ua_clean == "hematuria" & !str_detect(str_to_lower(ss_combined), "hematuria"),
ifelse(is.na(ss_combined) | ss_combined == "", "hematuria", paste(ss_combined, "hematuria", sep = "; ")),
ss_combined
)
)
# Create ID and clean the combined symptom column
ss_clean <- data.frame(id = seq_along(df$ss_combined), ss = df$ss_combined) %>%
mutate(ss = str_to_lower(ss)) %>%
mutate(ss = str_replace_all(ss, ",", ";")) %>%
separate_rows(ss, sep = ";\\s*") %>%
mutate(ss = str_trim(ss)) %>%
filter(ss != "") %>%
distinct(id, ss)
# symptom categorization
ss_clean <- ss_clean %>%
mutate(symptom = case_when(
str_detect(ss, "flank pain") ~ "Flank pain",
str_detect(ss, "abdominal pain") ~ "Abdominal pain",
str_detect(ss, "back pain") ~ "Back pain",
str_detect(ss, "chest pain") ~ "Chest Pain",
str_detect(ss, "nausea") ~ "Nausea",
str_detect(ss, "vomiting") ~ "Vomiting",
str_detect(ss, "hematemesis") ~ "Hematemesis",
str_detect(ss, "headache") ~ "Headache",
str_detect(ss, "syncope") ~ "Syncope",
str_detect(ss, "hematuria") ~ "Hematuria",
str_detect(ss, "palpitations|palpations") ~ "Palpitations",
str_detect(ss, "oligou?ria") ~ "Oliguria",
str_detect(ss, "anuria") ~ "Anuria",
str_detect(ss, "fatigue") ~ "Fatigue",
str_detect(ss, "distension") ~ "Abdominal distension",
str_detect(ss, "ecchymosis") ~ "Ecchymosis",
str_detect(ss, "hypertension") ~ "Hypertension",
str_detect(ss, "aki") ~ "Acute kidney injury",
str_detect(ss, "asymptomatic") ~ "Asymptomatic",
TRUE ~ str_to_title(ss)
))
symptom_summary <- ss_clean %>%
count(symptom, sort = TRUE) %>%
mutate(Percentage = round(100 * n / n_distinct(ss_clean$id), 1))
symptom_summary %>%
kbl(caption = "Presenting Symptoms and Signs",
col.names = c("Symptom", "Count", "Percentage (%)"),
align = "lcc") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"),
full_width = FALSE)
# Professional symptom plot
ggplot(symptom_summary, aes(x = reorder(symptom, n), y = n)) +
geom_col(fill = "#D55E00") +
geom_text(aes(label = paste0(Percentage, "%")), hjust = -0.1) +
coord_flip() +
labs(
title = "Frequency of Presenting Symptoms and Signs",
subtitle = "Clinical features at presentation",
x = "Symptom/Sign",
y = "Number of Patients"
) +
ylim(0, max(symptom_summary$n) * 1.15)
ua_summary <- df %>%
mutate(ua_result = case_when(
is.na(ua) ~ "Missing",
str_to_lower(ua) %in% c("hematuria") ~ "Positive",
str_to_lower(ua) %in% c("negative") ~ "Negative",
str_detect(str_to_lower(ua), "trace") ~ "Positive",
TRUE ~ "Other"
)) %>%
count(ua_result, name = "n") %>%
mutate(percent = round(100 * n / sum(n), 1))
ua_summary %>%
kbl(caption = "Urinalysis Results Distribution",
col.names = c("Urinalysis Result", "n", "Percentage (%)"),
align = "lcc") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"),
full_width = FALSE)
grade_summary <- df %>%
count(grade, name = "n", drop = FALSE) %>%
mutate(
Grade = ifelse(is.na(grade), "Missing", as.character(grade)),
Percentage = round(100 * n / nrow(df), 1)
) %>%
select(Grade, n, Percentage)
grade_summary %>%
kbl(caption = "Distribution of AAST Kidney Injury Grades",
align = "lcc") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"),
full_width = FALSE)
# Professional grade visualization
ggplot(grade_summary, aes(x = reorder(Grade, -n), y = n, fill = Grade)) +
geom_col(width = 0.6, color = "black") +
geom_text(aes(label = paste0(n, " (", Percentage, "%)")),
vjust = -0.5, size = 4) +
labs(
title = "AAST Kidney Injury Grade Distribution",
subtitle = "Injury severity classification",
x = "AAST Grade",
y = "Number of Patients"
) +
theme(legend.position = "none")
size_summary <- df %>%
summarise(
median = median(size.cm, na.rm = TRUE),
iqr_low = quantile(size.cm, 0.25, na.rm = TRUE),
iqr_high = quantile(size.cm, 0.75, na.rm = TRUE),
min = min(size.cm, na.rm = TRUE),
max = max(size.cm, na.rm = TRUE),
mean = mean(size.cm, na.rm = TRUE),
sd = sd(size.cm, na.rm = TRUE),
missing = sum(is.na(size.cm)),
total = n()
)
# Size distribution histogram
ggplot(df %>% filter(!is.na(size.cm)), aes(x = size.cm)) +
geom_histogram(bins = 12, fill = "#20B2AA", alpha = 0.8, color = "white") +
geom_vline(aes(xintercept = median(size.cm, na.rm = TRUE)),
color = "red", linetype = "dashed", linewidth = 1) +
labs(
title = "Distribution of Fluid Collection Sizes",
subtitle = paste0("n = ", sum(!is.na(df$size.cm)), " patients with reported measurements"),
x = "Collection Size (cm)",
y = "Number of Patients"
)
# Size summary table
size_stats_table <- data.frame(
Statistic = c("n", "Median (IQR)", "Mean ± SD", "Range", "Missing"),
Value = c(
sum(!is.na(df$size.cm)),
paste0(size_summary$median, " (", size_summary$iqr_low, "–", size_summary$iqr_high, ")"),
paste0(round(size_summary$mean, 1), " ± ", round(size_summary$sd, 1)),
paste0(size_summary$min, "–", size_summary$max),
paste0(size_summary$missing, " (", round(100 * size_summary$missing / size_summary$total, 1), "%)")
)
)
size_stats_table %>%
kbl(caption = "Perinephric Fluid Collection Size Statistics",
align = "lc") %>%
kable_styling(bootstrap_options = c("striped", "hover"),
full_width = FALSE)
page_type_summary <- df %>%
mutate(page_type_clean = ifelse(is.na(page.type), "Missing", as.character(page.type))) %>%
count(page_type_clean, name = "n") %>%
mutate(Percentage = round(100 * n / sum(n), 1))
page_type_summary %>%
kbl(caption = "Type of Perinephric Fluid Collection",
col.names = c("Collection Type", "n", "Percentage (%)"),
align = "lcc") %>%
kable_styling(bootstrap_options = c("striped", "hover"),
full_width = FALSE)
# Visualization
ggplot(page_type_summary, aes(x = reorder(page_type_clean, n), y = n)) +
geom_col(fill = "#800000", alpha = 0.8) +
geom_text(aes(label = paste0(n, " (", Percentage, "%)")),
hjust = -0.1, size = 4) +
coord_flip() +
labs(
title = "Distribution of Fluid Collection Types",
x = "Collection Type",
y = "Number of Cases"
) +
scale_y_continuous(expand = expansion(mult = c(0, 0.15)))
laterality_table <- df %>%
count(laterality) %>%
mutate(Percentage = round(100 * n / sum(n), 1))
laterality_table %>%
kbl(caption = "Distribution of Laterality in Page Kidney Cases",
align = "lcc") %>%
kable_styling(bootstrap_options = c("striped", "hover"),
full_width = FALSE)
# Laterality visualization
ggplot(laterality_table, aes(x = reorder(laterality, n), y = n)) +
geom_col(fill = "#2F4F4F", alpha = 0.8) +
geom_text(aes(label = paste0(n, " (", Percentage, "%)")),
hjust = -0.1, size = 4) +
coord_flip() +
labs(
title = "Laterality Distribution of Page Kidney",
x = "Kidney Location",
y = "Number of Cases"
) +
scale_y_continuous(expand = expansion(mult = c(0, 0.15)))
treatment_categories <- data.frame(
Category = c("Conservative Management", "Percutaneous/IR Drainage", "Urologic Interventions",
"Surgical Decompression", "Nephrectomy", "Embolization/Vascular"),
Definition = c("Medical management only, no procedural interventions",
"US- or CT-guided drainage, non-surgical",
"Involving stents or urinary diversion",
"Operative evacuation of hematoma without nephrectomy",
"Total or partial nephrectomy (open/lap)",
"IR embolization or stenting of vessels"),
Examples = c("conservative, lisinopril, clonidine, captopril, propranolol",
"US drainage, CT perc drain, IR drainage, tPA, fibrinolysis",
"ureteral stent, ureteral stet, labetalol + stent",
"surgical evacuation, laparoscopic fenestration, decortication, renorrhaphy",
"lap nephrectomy, total nephrectomy, surgical evacuation + nephrectomy",
"IR coil embolization, splenic vein stent")
)
treatment_categories %>%
kbl(caption = "Treatment Category Definitions and Examples") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"),
full_width = TRUE) %>%
column_spec(2, width = "35%") %>%
column_spec(3, width = "35%")
df <- df %>%
mutate(treatment_lower = tolower(treatment))
df_flags <- df %>%
mutate(
Conservative = str_detect(treatment_lower, "conservative|lisinopril|clonidine|captopril|amlodipine|propran|methyldopa|hctz|hydralazine|felodipine|labetolol|nitroprusside") &
!str_detect(treatment_lower, "drain|nephrectomy|evacuation|decortication|fenestration|stent|embol|coil|surgery|lap|ureter"),
Perc_IR = str_detect(treatment_lower, "drain|fibrinolysis|fine needle|tp[a]?") &
!str_detect(treatment_lower, "surgery|nephrectomy"),
Urologic = str_detect(treatment_lower, "ureteral stent|stet"),
Surgical_Decompression = str_detect(treatment_lower, "surgical evacuation|decortication|renorrhaphy|laparotomy|debridement|fenestration") &
!str_detect(treatment_lower, "nephrectomy"),
Nephrectomy = str_detect(treatment_lower, "nephrectomy"),
Vascular = str_detect(treatment_lower,
"embolization|coil|splenic vein stent")
)
# Pivot longer to get counts
treatment_summary <- df_flags %>%
select(reference, starts_with(c("Conservative", "Perc_IR", "Urologic",
"Surgical_Decompression", "Nephrectomy",
"Vascular"))) %>%
pivot_longer(cols = -reference, names_to = "Category",
values_to = "Present") %>%
filter(Present) %>%
count(Category, name = "n") %>%
mutate(Percentage = round(100 * n / nrow(df), 1))
treatment_summary %>%
kbl(caption = "Distribution of Treatment Modalities",
col.names = c("Treatment Category", "n", "Percentage (%)"),
align = "lcc") %>%
kable_styling(bootstrap_options = c("striped", "hover"),
full_width = FALSE)
# Treatment distribution plot
ggplot(treatment_summary, aes(x = reorder(Category, -n), y = n)) +
geom_bar(stat = "identity", fill = "#DAA520") +
geom_text(aes(label = paste0(n, " (", Percentage, "%)")),
vjust = -0.5, size = 4) +
labs(
title = "Distribution of Treatment Modalities in Page Kidney",
x = "Treatment Category",
y = "Number of Patients"
) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_y_continuous(expand = expansion(mult = c(0, 0.15)))
df$fu.y <- as.numeric(df$fu.y)
# Summary stats
followup_summary <- df %>%
summarize(
`Number with Reported Follow-Up` = sum(!is.na(fu.y)),
`Mean (years)` = round(mean(fu.y, na.rm = TRUE), 2),
`Median (years)` = round(median(fu.y, na.rm = TRUE), 2),
`Min (years)` = round(min(fu.y, na.rm = TRUE), 2),
`Max (years)` = round(max(fu.y, na.rm = TRUE), 2)
)
followup_summary %>%
kbl(caption = "Follow-up Duration Summary",
align = "lc") %>%
kable_styling(bootstrap_options = c("striped", "hover"),
full_width = FALSE)
ggplot(df %>% filter(!is.na(fu.y)), aes(x = fu.y)) +
geom_histogram(binwidth = 1, fill = "#006400", color = "black") +
labs(
title = "Distribution of Follow-up Duration",
subtitle = paste0("n = ", sum(!is.na(df$fu.y)), " patients with reported follow-up"),
x = "Years of Follow-Up",
y = "Number of Patients"
)
# Survival/outcome summary
survival_summary <- data.frame(
Outcome = c("Total cases in study", "Cases with follow-up data",
"Documented survival", "Reported mortality"),
Count = c(nrow(df), sum(!is.na(df$fu.y)),
sum(df$fu.status == TRUE, na.rm = TRUE),
sum(df$fu.status == FALSE, na.rm = TRUE)),
Percentage = c(100, round(100 * sum(!is.na(df$fu.y)) / nrow(df), 1),
round(100 * sum(df$fu.status == TRUE,
na.rm = TRUE) / sum(!is.na(df$fu.y)), 1),
0)
)
survival_summary %>%
kbl(caption = "Clinical Outcomes Summary",
align = "lcc") %>%
kable_styling(bootstrap_options = c("striped", "hover"),
full_width = FALSE)
pmh_cleaned <- pmh_all %>%
group_by(id) %>%
summarise(
pmh = paste(unique(category), collapse = "; "),
.groups = "drop"
)
ss_cleaned <- ss_clean %>%
group_by(id) %>%
summarise(
ss = paste(unique(symptom), collapse = "; "),
.groups = "drop"
)
# Select only the treatment flag columns
treatment_cols <- c("Conservative", "Perc_IR", "Urologic",
"Surgical_Decompression", "Nephrectomy", "Vascular")
# Create a treatment summary
treatment_cleaned <- df_flags %>%
mutate(id = row_number()) %>%
pivot_longer(
cols = all_of(treatment_cols),
names_to = "category",
values_to = "present"
) %>%
filter(present) %>%
group_by(id) %>%
summarise(
treatment_summary = paste(category, collapse = "; "),
.groups = "drop"
)
df <- df %>%
mutate(id = row_number()) %>%
left_join(pmh_cleaned, by = "id") %>%
left_join(ss_cleaned, by = "id") %>%
left_join(treatment_cleaned, by = "id")
# Making final table
df_final <- df %>%
select(
reference, year, age, gender,
pmh = pmh.y,
onset.y, mechanism,
ss = ss.y,
hypertension,
ua = ua_result,
grade, size.cm, page.type, laterality,
treatment = treatment_summary,
fu.status, fu.y
)
# Export cleaned data
write.csv(df_final, "data/pk-clean.csv", row.names = FALSE)
# Cleaning workspace
rm(list = setdiff(ls(), "df"))
